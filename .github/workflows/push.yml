name: 'Release ðŸš€'

on:
  push:
    branches:
      - alpha
      - beta

jobs:
  release:
    name: 'Publish new release ðŸš€'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: myparcelnl/actions/yarn2-install@v2

      - name: 'Handle build cache'
        uses: actions/cache@v3
        id: cache-build
        with:
          path: |
            packages/**/lib
          key: ${{ runner.os }}-build-${{ hashFiles('packages/**/src/**') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: 'Handle Nx cache'
        uses: actions/cache@v3
        id: cache-nx
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-nx-${{ hashFiles('package.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ hashFiles('package.json') }}-

      - name: 'Build packages'
        run: |
          yarn build

      - uses: myparcelnl/actions/setup-git-credentials@v2
        with:
          token: ${{ secrets.GH_REPO_TOKEN }}

      - name: 'debug'
        run: |
          git log --oneline

          ls -la
          ls -la packages
          ls -la packages/**/lib

      - name: 'Run monodeploy'
        run: |
          yarn monodeploy \
            --config-file monodeploy.config.cjs \
            --log-level 0
        env:
          GH_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_TOKEN }}
