name: 'Publish new release ðŸš€'

on:
  push:
    branches:
      - main
      - alpha
      - beta

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  release:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v4
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.credentials.outputs.token }}

      - uses: myparcelnl/actions/yarn-install@v4

      - uses: ./.github/actions/build

      - uses: actions/upload-pages-artifact@v1
        with:
          path: ./apps/demo/dist

      - name: 'Run monodeploy'
        env:
          GH_TOKEN: ${{ steps.credentials.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        #language=bash
        run: |
          yarn monodeploy \
            --config-file monodeploy.config.cjs \
            --log-level 0

  rebase-prs:
    needs: release
    runs-on: ubuntu-22.04
    steps:
      - uses: myparcelnl/actions/rebase-prs@v4
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}
          base: ${{ github.ref_name }}
          exclude-drafts: true
          exclude-labels: 'dependencies'

  deploy:
    needs: release
    runs-on: ubuntu-22.04
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v2

  notify-on-failure:
    needs:
      - test
      - release
      - deploy
    if: always() && contains(needs.*.result, 'failure')
    uses: myparcelnl/actions/.github/workflows/notify-on-failure.yml@v4
    secrets: inherit
